DROP TABLE IF EXISTS genres_names CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS film_user_likes_set CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS user_friends CASCADE;
DROP TABLE IF EXISTS film_directors CASCADE;
DROP TABLE IF EXISTS directors_names CASCADE;
DROP TABLE IF EXISTS ratings CASCADE;
DROP TABLE IF EXISTS reviews CASCADE;
DROP TABLE IF EXISTS reviews_likes CASCADE;
DROP TABLE IF EXISTS users_feed CASCADE;


CREATE TABLE IF NOT EXISTS ratings
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    release_date date,
    duration INTEGER,
    rating_id INTEGER NOT NULL REFERENCES ratings (id)
);

CREATE TABLE IF NOT EXISTS users
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email TEXT NOT NULL,
    login TEXT NOT NULL,
    name TEXT,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS genres_names
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id INTEGER NOT NULL REFERENCES films (id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genres_names (id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS film_user_likes_set
(
    user_id INTEGER NOT NULL REFERENCES users (id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    film_id INTEGER NOT NULL REFERENCES films (id)
    ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS directors_names
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id INTEGER NOT NULL REFERENCES users (id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    friend_id INTEGER NOT NULL REFERENCES users (id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    is_accepted BOOLEAN NOT NULL DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS film_directors
(
    film_id INTEGER NOT NULL REFERENCES films (id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    director_id INTEGER NOT NULL REFERENCES directors_names (id)
    ON DELETE CASCADE ON UPDATE CASCADE
    );
CREATE TABLE IF NOT EXISTS reviews  (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL references users(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    film_id INTEGER NOT NULL references films(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    content varchar(2000) not null,
    useful INTEGER,
    isPositive BOOL not null
);

CREATE TABLE IF NOT EXISTS reviews_likes  (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    review_id INTEGER NOT NULL references reviews(id),
    user_id INTEGER NOT NULL references users(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    liketype varchar not null
);

CREATE TABLE IF NOT EXISTS users_feed (
    event_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    operation VARCHAR(10) NOT NULL CHECK (operation IN ('ADD', 'REMOVE', 'UPDATE')),
    event_type VARCHAR(10) NOT NULL CHECK (event_type IN ('LIKE', 'REVIEW', 'FRIEND')),
    timestamp TIMESTAMP NOT NULL,
    entity_id INTEGER NOT NULL
);
